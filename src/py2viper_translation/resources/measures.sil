domain Measure$ {

    function Measure$create(key: Ref, value: Int): Measure$

    function Measure$key(m: Measure$): Ref

    function Measure$value(m: Measure$): Int

    axiom Measure$A1 {
        (forall k: Ref, v: Int :: Measure$key(Measure$create(k, v)) == k)
    }

    axiom Measure$A2 {
        (forall k: Ref, v: Int :: Measure$value(Measure$create(k, v)) == v)
    }
}

function Measure$check(map: Seq[Measure$], key: Ref, value: Int): Bool
{
    (forall m: Measure$ :: m in map ==> (Measure$key(m) == key ==> Measure$value(m) > value))
}
