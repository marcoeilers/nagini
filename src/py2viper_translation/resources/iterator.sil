field list_acc : Seq[Ref]
field set_acc : Set[Ref]
field dict_acc : Set[Ref]

field __container : Ref
field __iter_index : Int
field __previous: Ref

method Iterator___next__(self: Ref) returns (_res: Ref, _err: Ref)
  requires acc(self.list_acc, 1 / 40)
  requires acc(self.__iter_index, write)
  requires acc(self.__previous, 1 / 40) && acc(self.__previous.list_acc, write)
  ensures acc(self.list_acc, 1 / 40) && (self.list_acc == old(self.list_acc))
  ensures acc(self.__iter_index, write)
  ensures old(self.__iter_index == |self.list_acc|) <==> _err != null
  ensures acc(self.__previous, 1 / 40) && (self.__previous == old(self.__previous)) && acc(self.__previous.list_acc, write)
  ensures _err == null ==> (self.__iter_index == old(self.__iter_index) + 1)
  ensures _err == null ==> self.__previous.list_acc == self.list_acc[..self.__iter_index - 1]
  ensures |self.list_acc| > 0 ==> _res == self.list_acc[self.__iter_index - 1] && _res in self.list_acc
  ensures _err != null ==> self.__previous.list_acc == self.list_acc
  ensures _err != null ==> self.__iter_index == |self.list_acc|
  ensures |self.list_acc| > 0 ==> issubtype(typeof(_res), Iterator_arg(typeof(self), 0))
{
  inhale false
}

method Iterator___del__(self: Ref)
  requires acc(self.list_acc, 1 / 20)
  requires acc(self.__container, 1 / 20)
  ensures acc(self.__container, 1 / 20)
  ensures (issubtype(typeof(self.__container), list(list_arg(typeof(self.__container), 0)))) ==> acc(self.__container.list_acc, 1 / 20)
  ensures (issubtype(typeof(self.__container), dict(dict_arg(typeof(self.__container), 0), dict_arg(typeof(self.__container), 1)))) ==> acc(self.__container.dict_acc, 1 / 20)
  ensures (issubtype(typeof(self.__container), set(set_arg(typeof(self.__container), 0)))) ==> acc(self.__container.set_acc, 1 / 20)
{
  inhale false
}