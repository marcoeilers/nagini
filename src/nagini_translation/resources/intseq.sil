/*
 * Copyright (c) 2019 ETH Zurich
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function PIntSeq___val__(self: Ref): Seq[Int]
    decreases _
    requires issubtype(typeof(self), PIntSeq())

function PIntSeq___len__(self: Ref): Int
    decreases _
    requires issubtype(typeof(self), PIntSeq())
    ensures result == |PIntSeq___val__(self)|

function PIntSeq___create__(values: Seq[Int]): Ref
    decreases _
    ensures typeof(result) == PIntSeq()
    ensures PIntSeq___val__(result) == values

function PIntSeq___contains__(self: Ref, item: Int): Bool
    decreases _
    requires issubtype(typeof(self), PIntSeq())
    ensures result == (item in PIntSeq___val__(self))

function PIntSeq___getitem__(self: Ref, index: Ref): Int
    decreases _
    requires issubtype(typeof(self), PIntSeq())
    requires issubtype(typeof(index), int())
    requires @error("Index may be out of bounds.")(let ln == (PIntSeq___len__(self)) in
                @error("Index may be out of bounds.")((int___unbox__(index) < 0 ==> int___unbox__(index) >= -ln) && (int___unbox__(index) >= 0 ==> int___unbox__(index) < ln)))
    ensures result == (int___unbox__(index) >= 0 ? PIntSeq___val__(self)[int___unbox__(index)] : PIntSeq___val__(self)[PIntSeq___len__(self) + int___unbox__(index)])

function PIntSeq_take(self: Ref, no: Int): Ref
    decreases _
    requires issubtype(typeof(self), PIntSeq())
    ensures result == PIntSeq___create__(PIntSeq___val__(self)[..no])

function PIntSeq_drop(self: Ref, no: Int): Ref
    decreases _
    requires issubtype(typeof(self), PIntSeq())
    ensures result == PIntSeq___create__(PIntSeq___val__(self)[no..])

function PIntSeq_update(self: Ref, index: Int, val: Int): Ref
    decreases _
    requires issubtype(typeof(self), PIntSeq())
    requires index >= 0 && index < PIntSeq___len__(self)
    ensures result == PIntSeq___create__(PIntSeq___val__(self)[index := val])

function PIntSeq___add__(self: Ref, other: Ref): Ref
    decreases _
    requires issubtype(typeof(self), PIntSeq())
    requires issubtype(typeof(other), PIntSeq())
    ensures result == PIntSeq___create__(PIntSeq___val__(self) ++ PIntSeq___val__(other))

function PIntSeq___eq__(self: Ref, other: Ref): Bool
    decreases _
    requires issubtype(typeof(self), PIntSeq())
    requires issubtype(typeof(other), PIntSeq())
    ensures result == (PIntSeq___val__(self) == PIntSeq___val__(other))
    ensures result ==> self == other // extensionality
    ensures result == object___eq__(self, other)


function PIntSeq___sil_seq__(self: Ref): Seq[Ref]
    decreases _
    requires issubtype(typeof(self), PIntSeq())
    ensures PIntSeq___val__(self) == __seq_ref_to_seq_int(result)


// Helper function to wrap generic __sil_seq__ calls for conversion to PIntSeq
function PIntSeq___seq_ref_to_seq_int__(sr: Seq[Ref]): Seq[Int]
    decreases _
{
    __seq_ref_to_seq_int(sr)
}